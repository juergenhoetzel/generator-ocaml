# Generated by generator-ocaml, a Yeoman generator to scaffold OCaml modules.

# OASIS is a tool to integrate a configure, build and install system in your
# OCaml project.

# This `_oasis` file at the root of the project source directory contains
# semi-colon separated fields and sections that describe what is contained in
# the project and what to do with it.

# For more info on how to fill this file take a look at the docs here:
# <http://oasis.forge.ocamlcore.org/MANUAL.html#writing-_oasis-file>

OASISFormat:            0.4
Name:                   <%= pkgCapitalizedName %>
Version:                <%= pkgVersion %>:
Synopsis:               <%= pkgDescription %>
Authors:                <%= authorName %>
License:                <%= license %>
Plugins:                META (0.4)
BuildTools:             ocamlbuild
AlphaFeatures:          ocamlbuild_more_args
PostCleanCommand:
  $rm -f `find . -name "*~"`
PostDistcleanCommand:
  $rm -f _tags myocamlbuild.ml setup.ml setup.data lib/api.odocl
  $rm -f `find lib -name "*.mllib" -or -name "*.mldylib"`
  $rm -f `find lib -name "META" -or -name "*.mlpack"`
  $rm -rf doc/api `find -name "*.docdir"`

Library <%= pkgSlugName %>
  Path:                 lib
  Modules:              <%= pkgSlugName %>
  CompiledObject:       best

Executable <%= pkgSlugName %>_test
  Path:                 test
  MainIs:               <%= pkgName %>_test.ml
  Install:              false
  Build$:               flag(tests)
  BuildDepends:         <%= pkgSlugName %>, oUnit (>= 2.0)
  CompiledObject:       best

Test test_loader
  WorkingDirectory:     test
  Run$:                 flag(tests)
  Command:              $<%= pkgSlugName %>_test

Document api
  Title:                <%= pkgCapitalizedName %> API Reference
  Authors:              <%= authorName %>
  Abstract:             <%= pkgDescription %>
  Type:                 ocamlbuild (0.4)
  BuildTools:           ocamldoc
  XOCamlbuildPath:      lib
  XOCamlbuildLibraries: <%= pkgSlugName %>
  XOCamlbuildExtraArgs:
    -no-links -docflags -d,doc/api,-colorize-code,-short-functors,-charset,utf-8
  PreCommand:           $rm -rf doc/api
  PostCommand:          mv _build/lib/api.docdir doc/api
